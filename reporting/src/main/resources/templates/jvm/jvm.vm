#*
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
*#
#macro ( datePicker $label $id )
    <div id="$id" class="input-append date">
        <label for="$id">$label</label>
        <input data-format="dd/MM/yyyy hh:mm:ss" type="text">
        <span class="add-on">
          <i data-time-icon="icon-time" data-date-icon="icon-calendar"></i>
        </span>
    </div>
#end
#macro (dateForm $id)
    <form class="form-inline" id="update-$id">
        #datePicker("From", "${id}-datetimepicker-start")
        #datePicker("To", "${id}-datetimepicker-end")
        <button type="submit" class="btn btn-primary">Update</button>
    </form>
#end

<div class="container-fluid">
    <div class="row-fluid">
        <div class="span6">
            <div class="page-header">
                <h2>CPU</h2>
            </div>

            <div id="cpu-graph" class="plot"></div>

            #dateForm('cpu')

            <table id="cpu-table" class="table table-bordered table-striped table-hover">
                <tbody>
                    <tr><td>OS Name</td><td>$name</td></tr>
                    <tr><td>Version</td><td>$version</td></tr>
                    <tr><td>Architecture</td><td>$architecture</td></tr>
                    <tr><td>Number of processors</td><td>$numberProcessor</td></tr>
                </tbody>
            </table>
        </div>
        <div class="span6">
            <div class="page-header">
                <h2>Memory</h2>
            </div>

            <div id="memory-graph" class="plot"></div>

            #dateForm('memory')

            <table id="memory-table" class="table table-bordered table-striped table-hover">
                <tbody>
                    <tr><td>Init</td><td>$initMemory</td></tr>
                    <tr><td>Max</td><td>$maxMemory</td></tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<script type="text/javascript" src="$mapping/resources/js/bootstrap-datetimepicker.min.js"></script>
<script type="text/javascript" src="$mapping/resources/js/jquery.flot.min.js"></script>
<script type="text/javascript" src="$mapping/resources/js/jquery.flot.time.min.js"></script>
<script type="text/javascript">
    $(function() {
        $('#memory-datetimepicker-start').datetimepicker();
        $('#memory-datetimepicker-end').datetimepicker();
        $('#cpu-datetimepicker-start').datetimepicker();
        $('#cpu-datetimepicker-end').datetimepicker();

        var cpuOptions = {
            canvas: true,
            series: { lines: { show: true }, points: { show: true } },
            grid: { hoverable: true, clickable: true },
            xaxes: [ { mode: "time", timezone: "browser" } ],
            yaxes: [ {
                min: 0,
                tickFormatter: function (value, axis) {
                    return value.toFixed(axis.tickDecimals) + "%";
                }
            } ]
        };
        var memoryOptions = {
            canvas: true,
            series: { lines: { show: true }, points: { show: true } },
            grid: { hoverable: true, clickable: true },
            xaxes: [ { mode: "time", timezone: "browser" } ],
            yaxes: [
                {
                    min: 0,
                    tickFormatter: function (bytes, axis) {
                        var precision = 2;
                        var kb = 1024;
                        var mb = kb * kb;
                        var gb = mb * kb;

                        if (bytes >= 0 && bytes < kb) {
                            return bytes + ' o';
                        } else if (bytes >= kb && bytes < mb) {
                            return (bytes / kb).toFixed(precision) + ' Ko';
                        } else if (bytes >= mb && bytes < gb) {
                            return (bytes / mb).toFixed(precision) + ' Mo';
                        } else if (bytes >= gb) {
                            return (bytes / gb).toFixed(precision) + ' Go';
                        }

                        return bytes + ' B';
                    }
                }
            ]
        };

        var updateGraph = function (graph, start, end, options) {
            $.ajax({
                url: "$mapping/jvm/" + graph + "/" + start + "/" + end,
                type: "GET",
                dataType: "json",
                success: function (data) {
                    $.plot("#" + graph + "-graph", [ data ], options);
                }
            });
        };

        var extractTime = function (picker) {
            return picker.data('datetimepicker').getLocalDate().getTime();
        };

        (function () { // init
            var now = new Date();
            var yesterday = new Date();
            yesterday.setMinutes(now.getMinutes() - 10);

            var start = yesterday.getTime();
            var end = now.getTime();

            updateGraph('cpu', start, end, cpuOptions);
            updateGraph('memory', start, end, memoryOptions);
        })();

        // update diagram when clicking on update buttons
        $('#update-cpu').submit(function () {
            updateGraph('cpu', extractTime($('#cpu-datetimepicker-start')), extractTime($('#cpu-datetimepicker-end')), cpuOptions);
            return false;
        });
        $('#update-memory').submit(function () {
            updateGraph('memory', extractTime($('#memory-datetimepicker-start')), extractTime($('#memory-datetimepicker-end')), memoryOptions);
            return false;
        });
    });
</script>
