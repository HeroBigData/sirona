<?xml version="1.0"?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<document>

  <properties>
    <title>use in a web applications</title>
  </properties>

  <body>

    <section name="Web application">
      <p>
        Monitoring provides support for servlet based web applications.
      </p>
      <subsection name="MonitoringFilter">
        <p>
          The monitoringFilter is a Servlet Filter to compute HTTP request serving performance. Simply add
          the following configuration to your
          <tt>WEB-INF/web.xml</tt>
          :
          <pre>
            &lt;filter&gt;
            &lt;filter-name&gt;Monitoring&lt;/filter-name&gt;
            &lt;filter-class&gt;org.apache.commons.monitoring.servlet.MonitoringFilter&lt;/filter-class&gt;
            &lt;/filter&gt;

            &lt;filter-mapping&gt;
            &lt;filter-name&gt;Monitoring&lt;/filter-name&gt;
            &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
            &lt;/filter-mapping&gt;
          </pre>
          Any incoming request will then be monitored and added to the repository.
          The monitor name is the requested URI path, and the extension is used to select a category.
        </p>
      </subsection>
      <subsection name="MonitoringServlet">
        <p>
          The monitoring serlvet give you access to the active repository. Using a selector path, you
          can select a set of monitors and get it rendered in any supported format (HTML, XML, JSON, ...).
          The selector path is a simple String to point to the expected objects :
          <ul>
            <li>
              <tt>/monitors</tt>
              will select all monitors in the repository.
            </li>
            <li>
              <tt>/monitorsFromCategory/services</tt>
              will select all monitors for the category "services".
            </li>
            <li>
              <tt>/monitorsFromSubsystem/admin</tt>
              will select all monitors for the subsystem "admin".
            </li>
          </ul>
        </p>
        <p>
          The monitoring serlvet also accepts parameter to filter the result :
          <ul>
            <li>Adding
              <tt>?format=html</tt>
              will force the output to be formatted in HTML. By default the
              user-agent
              <tt>accept</tt>
              header is used to find a valid renderer, but this may produce
            </li>
            <li>Adding
              <tt>?role=performances</tt>
              will select the "performances" counter to get included in
              the output. By default all roles are displayed. If some
              <tt>role</tt>
              parameter is set in the
              URI, only those roles are displayed. You can specify many
              <tt>role=*</tt>
              parameter or use
              the shortcut<tt>roles=x,y,z</tt>.
            </li>
            <li>Addind
              <tt>?performances.value=false</tt>
              will remove the "current value" column from the
              output. You can specify many
              <tt>[role].[attribute]=[true|false]</tt>
              parameter or use
              the shortcut<tt>[role].columns=x,y,z</tt>.
            </li>
            <li>Adding
              <tt>?performances.unit=ms</tt>
              will format the "performances" counter values to use
              milliseconds as data unit. The parameter value must be a valid derived unit from the counter unit.
              For time based counters, this includes
              <tt>ns</tt>
              (nanoseconds),
              <tt>Âµs</tt>
              (microseconds),
              <tt>ms</tt>
              (milliseconds),
              <tt>s</tt>
              (seconds) ... Please refer to the
              <code>org.apache.commons.monitoring.counter.Unit</code>
              javadoc for more infos on units.
            </li>
          </ul>
          By combining the request URI path and parameters, you can filter what is relevant for you. Bookmark
          the valuable URIs ! Example :
          <tt>http://myserver/monitoring/monitors?performances.unit=ms&amp;performances.value=false&amp;performances.sum=false</tt>
        </p>
      </subsection>
      <subsection name="Web UI">
        <p>
          The WebUI Servlet extends the monitoring serlvet and the HtmlRenderer to provide a simple
          Web UI. It uses the same URI filtering as MonitoringServlet, but also includes some
          CSS to render nicer and
          <a href="http://www.jquery.com">JQuery</a>
          to sort data.
        </p>
      </subsection>
    </section>

  </body>

</document>
